/* SPDX-License-Identifier: MIT */
/* Copyright (c) 2023, Russ Dill <russ.dill@gmail.com> */
#ifndef CONFIG_H
#define CONFIG_H

/* Maximum number of tokens line can be broken up into (length of argv) */
#define UC_CMD_MAX_TOKENS       8

/*
 * Maximum depth of command tree when printing help
 *
 * Static array is needed for recursing into command tree to print help.
 * If the actual depth is deeper than this the help output will include
 * a "..." rather than the full command.
 */
#define UC_CMD_MAX_DEPTH	4

/* When printing help, this is the header before the list of commands */
#define UC_CMD_HELP_HEADER	"Commands:\n"

/*
 * When a command is entered that doesn't match any known commands or has the
 * wrong number of arguments, this is printed before the supplied command
 * string
 */
#define UC_CMD_UNKNOWN_CMD	"Unknown command:"

/* Top level command table is storted in an array in the following section */
#define UC_CMD_TABLE_SECTION	"_text_uc_cmd"

/*
 * Symbol for the start/end of the above section. Can be generated by linker
 * script or supplied by gcc.
 */
#define UC_CMD_TABLE_START	__start__text_uc_cmd
#define UC_CMD_TABLE_END	__stop__text_uc_cmd

/*
 * Minimim alignment for struct uc_cmd
 *
 * When using the default linker table as is done with the example code, gcc
 * uses a 64-byte alignment for the structure members. When compiling using
 * a linker script, this can be set to a smaller number effectively packing
 * the array.
 */
#define UC_CMD_TABLE_ALIGN	64

/*
 * Maximum length of editable line
 *
 * Memory usage of buffers will be:
 *      UC_CON_LINE_LENGTH * (UC_CON_CMD_BUFFER + 1)
 */
#define UC_CON_LINE_LENGTH	64

/* Number of lines in history */
#define UC_CON_CMD_BUFFER	8

/* Command prompt to print */
#define UC_CON_PROMPT		"\rcon> "

#define UC_IO_STDOUT
/* #define UC_IO_PUTCHAR */

#endif
